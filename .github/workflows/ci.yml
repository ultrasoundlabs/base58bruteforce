name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # ---------------------- Linux specific setup ----------------------
    - name: Install build prerequisites (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential ninja-build

    - name: Set up CUDA toolkit (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      uses: Jimver/cuda-toolkit@v0.2.25
      with:
        cuda: '12.9.0'
        linux-local-args: '["--toolkit"]'
        log-file-suffix: '${{ matrix.os }}.txt'

    # ------------------------ Build on Linux -------------------------
    - name: Run build.sh (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      env:
        JOBS: 4              # Limit parallelism on CI runners
      run: |
        chmod +x ./build.sh
        ./build.sh Release

    # ----------------------- Build on Windows ------------------------
    - name: Run build.bat (Windows)
      if: startsWith(matrix.os, 'windows')
      shell: cmd
      run: build.bat

    # ----------------------- Upload artifacts ------------------------
    - name: Upload Linux binary
      if: startsWith(matrix.os, 'ubuntu')
      uses: actions/upload-artifact@v4
      with:
        name: base58bruteforce-linux
        path: build/base58bruteforce

    - name: Upload Windows binary
      if: startsWith(matrix.os, 'windows')
      uses: actions/upload-artifact@v4
      with:
        name: base58bruteforce-windows
        path: base58bruteforce.exe
